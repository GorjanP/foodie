format_tags(tagger("Mix the nuts and tomatoes in a plate."))
format_tags(tagger("Mix the nuts and tomatoes in a tablespoon."))
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data
cp_tag_data[,-6]
cp_tag_data[cp_tag_data$token =="platte",-6]
cp_tag_data[cp_tag_data$token =="platter",-6]
cp_tag_data[cp_tag_data$token =="dough\",-6]
cp_tag_data[cp_tag_data$token =="dough",-6]
cp_tag_data[cp_tag_data$token =="dough",-6]
cp_tag_data[cp_tag_data$token =="mixture",-6]
source('~/IJS/NLP/FoodEx_R/food_enities.R')
cp_tag_data[cp_tag_data$token =="elastic",-6]
cp_tag_data[cp_tag_data$token =="elastic",]
cp_tag_data[cp_tag_data$token =="mixture",]
cp_tag_data$token[fc==1]
cp_tag_data[cp_tag_data$token =="yeast",]
cp_tag_data$token[fc==1]
cp_ann_reduced
cp_ann_reduced$token
cp_ann_reduced$token[cp_ann$token$token=="yeast",]
cp_ann$token[cp_ann$token$token=="yeast",]
cp_ann$token[cp_ann$token$token=="pecan",]
cp_ann$token[cp_ann$token$token=="asd",]
format_tags(tagger("Chop the pecans"))
format_tags(tagger("Chop the pecans."))
format_tags(tagger("Chop the jalapenos."))
format_tags(tagger("Chop the jalapenos on a plate./"))
format_tags(tagger("Chop the jalapenos on a plate."))
format_tags(tagger("Chop the pecans on a plate."))
format_tags(tagger("Chop the pecans on a plate."))$sem2
format_tags(tagger("Chop the pecans on a plate."))$sem2[1]
clasS(format_tags(tagger("Chop the pecans on a plate."))$sem2[1])
typeof(format_tags(tagger("Chop the pecans on a plate."))$sem2[1])
class(format_tags(tagger("Chop the pecans on a plate."))$sem2[1])
format_tags(tagger("Chop the yeast on a plate."))$sem2[1]
format_tags(tagger("Chop the yeast on a plate."))
format_tags(tagger("In a small bowl, dissolve  1 teaspoon sugar and yeast in warm water."))
format_tags(tagger("Chop the jalapeno on a plate."))
format_tags(tagger("Chop the nut on a plate."))
source('~/IJS/NLP/FoodEx_R/food_enities.R')
format_tags(tagger("Chop the marinade on a plate."))
format_tags(tagger("Dry the peppers."))
format_tags(tagger("Dry peppers before chopping them."))
format_tags(tagger("Dry peppers before chopping the peppers."))
format_tags(tagger("Dry peppers before chopping the peppers on a plat\."))
format_tags(tagger("Dry peppers before chopping the peppers on a plate."))
format_tags(tagger("Dry pepper mixture before chopping the peppers on a plate."))
format_tags(tagger("Dry the yeast before chopping the peppers on a plate."))
format_tags(tagger("Boil yeast before chopping the peppers on a plate."))
format_tags(tagger("In a small bowl, dissolve  1 teaspoon sugar and yeast in warm water."))
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSe)
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSe)
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
rm(list = ls())
gc()
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
rez = parse_recipe(num=1, close = FALSE)
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data
cp_tag_data[,-6]
cp_tag_data[cp_tag_data$token == "elastic",-6]
cp_tag_data$token[fc==1]
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data$token[fc==1]
cp_tag_data[cp_tag_data$token == "elastic",-6]
cp_tag_data[cp_tag_data$token == "damp",-6]
cp_tag_data[cp_tag_data$token == "rolls",-6]
format_tags(tagger("Eat the sandwich."))
rm(list = ls())
gc()
rez = parse_recipe(num=99)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=99)
format_tags(tagger("Cool loaf in the pan for 10 minutes before removing to a wire rack to cool completely.
"))
format_tags(tagger("Transfer chicken to a warm platter."))
format_tags(tagger("Transfer chicken to a warm platter before soaking in water."))
format_tags(tagger("Scrape the bottom of the pan with a spatula to release solids into the gravy."))
format_tags(tagger("After baking the sandwiches, eat them"))
format_tags(tagger("After baking the sandwiches, eat them."))
rm(list = ls())
library(coreNLP)
initCoreNLP()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
parse_recipe(num=1)
parse_recipe(num=100)
rm(list = ls())
gc()
source('~/IJS/NLP/data/crawler.R')
rm(list = ls())
source("D:\Gorjan\Documents\IJS\NLP\data")
source("D:\\Gorjan\\Documents\\IJS\\NLP\\data\\crawler.R")
g_html()
??read_html
g_html()
source('~/IJS/NLP/data/crawler.R')
source('~/IJS/NLP/data/crawler.R')
g_html()
source('~/IJS/NLP/data/crawler.R')
g_html()
source('~/IJS/NLP/data/crawler.R')
g_html()
rm(list = ls())
gc()
source('~/IJS/NLP/data/crawler.R')
g_html()
source('~/IJS/NLP/data/crawler.R')
g_html(1000)
source('~/IJS/NLP/data/crawler.R')
gc()
g_html(1000)
rm(list = ls())
source('~/IJS/NLP/data/crawler.R')
g_html(1000)
source('~/IJS/NLP/data/crawler.R')
g_html(5)
source('~/IJS/NLP/data/crawler.R')
g_html(5)
rm(list = ls())
gc()
source('~/IJS/NLP/data/crawler.R')
g_html()
a = data.frame(1, 2)
a
b = data.frame(2, 3)
a == b
b = data.frame(1, 2)
a == b
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
check_duplicate_recipes()
check_duplicate_recipes()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
check_duplicate_recipes()
check_duplicate_recipes()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
check_duplicate_recipes()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
check_duplicate_recipes()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
check_duplicate_recipes()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
check_duplicate_recipes()
check_duplicate_recipes()
check_duplicate_recipes()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
check_duplicate_recipes()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
parse_recipe(num=84)
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
parse_recipe(num=1, close = FALSE)
cp_tag_data
cp_tag_data[,-6]
cp_tag_data[,-6]
cp_tag_data[,-6]gc()
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
parse_recipe(num=84, close = TRUE)
format_tags(tagger("Cover
with
the
soup
,
straight
from
the
can
,
carefully
spreading
with
spatula
to
cover
entirely
."))
format_tags(tagger("Cover with the soup, straight from the can, carefully spreading with spatula to cover entirely.    "))
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
parse_recipe(num=84, close = TRUE)
format_tags(tagger("Remove lemon pith."))
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=84, close = TRUE)
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
format_tags(tagger("Place bacon in a 10-inch skillet and cook over medium heat, turning occasionally, until crisp, about 10 minutes."))
format_tags(tagger("Pour egg mixture over the Cheddar cheese-covered hash browns in the skillet."))
format_tags(tagger("Pour egg mixture over the Cheddar cheese-covered hash whites in the skillet."))
cond7 <- (length(t7) > 0)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=84, close = TRUE)
rez = parse_recipe(num=1, close = TRUE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = TRUE)
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data
cp_tag_data[,-6]
cp_tag_data[cp_tag_data$token=="hash",-6]
cp_tag_data[cp_tag_data$token=="brown",-6]
cp_tag_data[cp_tag_data$token=="browns",-6]
format_tags(tagger("Canned tuna."))
format_tags(tagger("Pour out the canned tuna."))
format_tags(tagger("Pour out the canned tuna into the bowl\."))
format_tags(tagger("Pour out the canned tuna into the bowl."))
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data[cp_tag_data$token=="skillet", ]
source('~/IJS/NLP/FoodEx_R/food_enities.R')
cp_tag_data[cp_tag_data$token=="skillet", ]
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data[cp_tag_data$token=="fat", ]
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rm(list = ls9)
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data[cp_tag_data$token=='browns',-6]
cp_tag_data[cp_tag_data$token=='browns']
cp_tag_data[cp_tag_data$token=='browns',]
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=84, close = TRUE)
format_tags(tagger("Increase oil temperature in the deep-fryer or large saucepan to 375 degrees F (190 degrees C). "))
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
format_tags(tagger("Increase oil temperature in the deep-fryer or large saucepan to 375 degrees F (190 degrees C). "))
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data
cp_tag_data[cp_tag_data$token=="rack",]
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
rm(list  = ls())
gv()
gc()
rez = parse_recipe(num=84)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=84)
format_tags(tagger("Put in baking powder."))
format_tags(tagger("Cut zucchin."))
format_tags(tagger("Cut zucchini."))
bla = format_tags(tagger("Cut zucchini."))
bla[, 2]
bla[2, sem2]
bla[2, 4]
bla[2, 6]
t_z <- grep("AG:01:(d|e|f|g|h|i|j|k|l|m|y|z)|AF|AE", bla[2,6], value = FALSE)
tz
t_z
source('~/IJS/NLP/FoodEx_R/food_enities.R')
t_z <- grep("AG.01.(d|e|f|g|h|i|j|k|l|m|y|z)|AF|AE", bla[2,6], value = FALSE)
t_Z
t_Z
t_z
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rm(list = ls())
gc()
rez = parse_recipe(num=84)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=84)
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
source('~/IJS/NLP/FoodEx_R/food_enities.R')
format_tags(tagger("Put it on a cooling rack.\"))
format_tags(tagger("Put it on a cooling rack."))
format_tags(tagger("Put it on a cooling rack."))
format_tags(tagger("Put the carrots on a cooling rack."))
format_tags(tagger("Put the carrots on a cooling rack to cool\."))
format_tags(tagger("Put the carrots on a cooling rack to cool."))
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1)
rez = parse_recipe(num=84)
rez = parse_recipe(num=84)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=84)
rm(list =ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=84)
rez = parse_recipe(num=100)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=100)
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=84)
rm(list = ls())
gc()
library(coreNLP)
initCoreNLP()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
parse_recipe(num=1, close = FALSE)
cp_tag_data
cp_tag_data$token
parse_recipe(num=1, close = FALSE)
rm (list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
cp_tag_data
cp_tag_data$token[fc==1]
rez$ann[[1]]$token
set.option("max.print" = 100000)
set.options("max.print" = 100000)
options("max.print" = 100000)
rez$ann[[1]]$token
rez$ann[[1]]$token$token
rez$ann[[1]]$token$token[fc==1]
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rm(list = ls())
gC()
gc()
source('~/IJS/NLP/FoodEx_R/food_enities.R')
rez = parse_recipe(num=1, close = FALSE)
rez = parse_recipe(num=1, close = FALSE)
rm(list = ls())
source('~/IJS/NLP/FoodEx_R/food_enities.R')
gc()
rez = parse_recipe(num=84, close = TRUE)
rm(list = ls())
gc()
library(coreNLP)
initCoreNLP()
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
parse_recipe(num = 22, close = TRUE)
parse_recipe(num = 22, close = TRUE)
parse_recipe(num = 22, close = TRUE)
parse_recipe(num = 22, close = TRUE)
parse_recipe(num = 22, close = TRUE)
parse_recipe(num = 21, close = TRUE)
cp_tag_data
cp_ann$token
options("max.print" = 10000)
cp_ann$token
cp_tag_data
cp_tag_data[, -6]
cp_ann$token
cp_ann$token$token == cp_tag_data$token
cp_tag_data[cp_ann$token$token == cp_tag_data$token]
cp_tag_data$token[cp_ann$token$token != cp_tag_data$token]
cp_tag_data$token[cp_tag_data$token == "colour"]
cp_tag_data$token[cp_tag_data$token == "colorr"]
cp_tag_dataken[cp_tag_data$token == "color"]
cp_tag_data[cp_tag_data$token == "color"]
cp_tag_data[cp_tag_data$token == "colour"]
cp_tag_data[cp_tag_data$token == "colour", -6]
cp_ann$token$token[cp_tag_data$token == "colour", -6]
cp_ann$token$token[cp_tag_data$token == "colour"]
length(cp_ann$token$token)
length(cp_tag_data$token)
parse_recipe(num = 20, close = TRUE)
parse_recipe(num = 1, close = FALSE)
rez =parse_recipe(num = 1, close = FALSE)
rez = parse_recipe(num = 21, close = TRUE)
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
rez = parse_recipe(num = 21, close = TRUE)
rm(list = ls())
gc()
rez = parse_recipe(num = 20, close = TRUE)
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
rez = parse_recipe(num = 20, close = TRUE)
rez = parse_recipe(num = 20, close = TRUE)
rez = parse_recipe(num = 1, close = TRUE)
View(rez)
rm(list = ls())
gc
gc()
library(coreNLP)
initCoreNLP()
setwd("D:\\Gorjan\\Documents\\IJS\\fChunk\\fchunk\\fchunk")
getw()
getwd()
library(coreNLP)
initCoreNLP()
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
parse_recipe(num=1, close = FALSE)
s
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
rez = parse_recipe(num=1, close = FALSE)
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
rm(list = ls())
gc()
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
rez = parse_recipe(num=1, close = FALSE)
s
charToInt(s)
charToInt('a')
as.vector(s)
s[1]
s[2]
strsplit(s, '')
sapply(strsplit(s, ''), FUN = charToInt)
chars <- sapply(strsplit(s, ''), FUN = charToInt)
chars
chars[1]
chars[2]
chars[3]
chars[732]
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
fix_characters(s)
s
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
fix_characters(s)
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
fix_characters(s)
strsplit(s, '')
chars[3]
chars
chars <- strsplit(s, '')
codes <- sapply(chars, FUN = charToInt())
codes <- sapply(ch = chars, FUN = charToInt())
codes <- sapply(ch = chars, FUN = charToInt
codes <- sapply(chars, FUN = charToInt)
codes
length(codes)
length(chars)
chars
length(chars)
length(chars)[[1]]
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
fix_characters(s)
fix_characters(s)
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
fix_characters(s)
source('~/IJS/NLP/FoodEx_R/food_enities_v2.R')
fix_characters("potato123º")
charToInt('º')
?iconv
iconv(string, to='ASCII//TRANSLIT')
iconv(s, to='ASCII//TRANSLIT')
iconv("asd", to='ASCII//TRANSLIT')
iconv("as°d", to='ASCII//TRANSLIT')
iconv("as~d", to='ASCII//TRANSLIT')
s <- iconv(s, to='ASCII//TRANSLIT',sub = "NA")
iconv("as°d", to='ASCII//TRANSLIT', sub = "NA")
iconv("as°d", to='ASCII//TRANSLIT', sub = "")
?iconv
s
s <- iconv(s, to='ASCII//TRANSLIT', sub = "")
s
s <- iconv(s, to='ASCII//TRANSLIT', sub = "ÿ")
s
s <- iconv("ÿ", to='ASCII//TRANSLIT', sub = "")
s
s <- iconv("Ž", to='ASCII//TRANSLIT', sub = "")
s
s <- iconv("", to='ASCII//TRANSLIT', sub = "")
s <- iconv("°", to='ASCII//TRANSLIT', sub = "")
s
s <- iconv("°", to='ASCII//TRANSLIT', sub = 'a')
s
s <- iconv("°", to='ASCII//TRANSLIT', sub = 'qwewq')
s
s <- iconv("°", to='ASCII', sub = 'qwewq')
s
s <- iconv("°", to='ASCII', sub = '')
s <- iconv("ÿ", to='ASCII', sub = 'a')
s
s <- iconv("°", to='ASCII//TRANSLIT', mark = TRUE)
s
s <- iconv("°", to='ASCII//TRANSLIT', mark = FALSE)
s
rm(list = ls())
gc()
